#!/usr/bin/env node

// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è bundle —Ñ–∞–π–ª–∞
const fs = require('fs');
const path = require('path');

console.log('üî® Building BattleMap Online bundle...');

// –ß–∏—Ç–∞–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏
const modules = [
    'src/client/js/ApiService.js',
    'src/client/js/BattleMap.js', 
    'src/client/js/OnlineBattleMap.js',
    'src/client/js/app.js'
];

let bundleContent = `
// BattleMap Online Bundle - Generated ${new Date().toISOString()}
(function() {
    'use strict';
    
`;

// –£–¥–∞–ª—è–µ–º import/export –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ–¥
modules.forEach(modulePath => {
    console.log(`  üì¶ Processing ${modulePath}...`);
    
    if (fs.existsSync(modulePath)) {
        let content = fs.readFileSync(modulePath, 'utf8');
        
        // –£–¥–∞–ª—è–µ–º import statements
        content = content.replace(/^import .* from .*;?\n/gm, '');
        content = content.replace(/^export /gm, 'window.');
        
        bundleContent += `
    // === ${modulePath} ===
    ${content}
    
`;
    } else {
        console.warn(`  ‚ö†Ô∏è  File not found: ${modulePath}`);
    }
});

bundleContent += `
})();
`;

// –°–æ—Ö—Ä–∞–Ω—è–µ–º bundle
const outputPath = 'public/js/battlemap.bundle.js';
fs.mkdirSync(path.dirname(outputPath), { recursive: true });
fs.writeFileSync(outputPath, bundleContent);

console.log(`‚úÖ Bundle created at ${outputPath}`);
console.log(`üìä Bundle size: ${(bundleContent.length / 1024).toFixed(2)} KB`);