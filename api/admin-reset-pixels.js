// Admin endpoint: –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∏–∫—Å–µ–ª–µ–π
import { Redis } from '@upstash/redis';

const redis = new Redis({
    url: process.env.KV_REST_API_URL,
    token: process.env.KV_REST_API_TOKEN
});

export default async function handler(req, res) {
    // CORS
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
    
    if (req.method === 'OPTIONS') {
        return res.status(200).end();
    }
    
    if (req.method !== 'POST') {
        return res.status(405).json({ error: 'Method not allowed' });
    }
    
    try {
        const { adminKey } = req.body;
        
        // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∫–ª—é—á–∞
        if (adminKey !== 'BattleMap2024Admin') {
            return res.status(401).json({ error: 'Unauthorized' });
        }
        
        console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –ø–∏–∫—Å–µ–ª–µ–π...');
        
        // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–∏–∫—Å–µ–ª—è–º–∏
        const keys = [
            'pixels:map',           // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–∏–∫—Å–µ–ª–µ–π
            'pixels:country:color', // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –∏ —Ü–≤–µ—Ç–∞–º
            'pixels:country:total', // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
            'pixels:colors:count',  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ü–≤–µ—Ç–∞–º
            'pixels:timeline',      // –í—Ä–µ–º–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è
            'pixels:total'          // –û–±—â–∏–π —Å—á–µ—Ç—á–∏–∫
        ];
        
        let deletedKeys = 0;
        
        for (const key of keys) {
            try {
                const result = await redis.del(key);
                if (result > 0) {
                    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω –∫–ª—é—á: ${key}`);
                    deletedKeys++;
                } else {
                    console.log(`‚ö†Ô∏è –ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: ${key}`);
                }
            } catch (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${key}:`, error.message);
            }
        }
        
        console.log(`üéØ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ –∫–ª—é—á–µ–π: ${deletedKeys}`);
        
        res.status(200).json({
            success: true,
            message: '–î–∞–Ω–Ω—ã–µ –ø–∏–∫—Å–µ–ª–µ–π –æ—á–∏—â–µ–Ω—ã',
            deletedKeys: deletedKeys,
            timestamp: new Date().toISOString()
        });
        
    } catch (error) {
        console.error('Admin reset error:', error);
        res.status(500).json({ 
            error: 'Failed to reset pixels data',
            message: process.env.NODE_ENV === 'development' ? error.message : undefined
        });
    }
}